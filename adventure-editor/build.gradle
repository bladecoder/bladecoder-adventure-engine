buildscript {
  repositories {
    mavenCentral()
  }
  
  dependencies {
    classpath "com.badlogicgames.gdx:gdx-tools:$libgdxVersion"
  }
}


apply plugin: "java"
apply plugin: 'application'

group = 'com.bladecoder.engineeditor'

mainClassName = 'com.bladecoder.engineeditor.Main'

// java
sourceCompatibility=1.7
targetCompatibility=1.7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

jar {
	manifest.attributes += [
			'github': 'https://github.com/bladecoder/bladecoder-adventure-engine/',
			'license': 'Apache-2.0',
			'group': project.group,
			'version': project.version,
			'libgdx': libgdxVersion,
			'java': targetCompatibility,
			'timestamp': System.currentTimeMillis()
	]
}

javadoc {
	title = "Adventure Editor"
	options {
		memberLevel = JavadocMemberLevel.PUBLIC
		author true
		setUse true
    	encoding "UTF-8"
	}
}

dependencies {
  compile "com.badlogicgames.gdx:gdx:$libgdxVersion"
  compile "com.badlogicgames.gdx:gdx-freetype:$libgdxVersion"
  compile "com.badlogicgames.gdx:gdx-tools:$libgdxVersion"
  compile fileTree(dir: 'libs', include: '*.jar')
  compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$libgdxVersion"
  compile "com.badlogicgames.gdx:gdx-platform:$libgdxVersion:natives-desktop"
  compile "com.badlogicgames.gdx:gdx-freetype-platform:$libgdxVersion:natives-desktop"
  compile "commons-io:commons-io:2.1"
  compile "com.bladecoder.packr:packr:2.1"
  compile "eu.infomas:annotation-detector:3.0.5"
  compile "com.strongjoshua:libgdx-inGameConsole:0.7.1"
  compile "com.kotcrab.vis:vis-ui:1.2.2"
  compile "com.bladecoder.ink:blade-ink:$bladeInkVersion"

  compile project(":blade-engine")
  compile project(":blade-engine-spine-plugin")
}

task setVersion(type: WriteProperties) {
	println "Set version info in versions.properties"

	def props = new Properties()
	def propFile = project.file("./src/main/resources/versions.properties");
	props.load(new FileReader(propFile))

	props."version" = version
	props."libgdxVersion" = libgdxVersion
	props."roboVMVersion" = roboVMVersion
	props."roboVMGradlePluginVersion" = roboVMGradlePluginVersion
	props."buildToolsVersion" = buildToolsVersion
	props."androidAPILevel" = androidAPILevel
	props."androidGradlePluginVersion" = androidGradlePluginVersion
	props."bladeInkVersion" = bladeInkVersion

	setProperties(props);
	setOutputFile(propFile);
}

processResources.finalizedBy(setVersion)

// Run `gradle pack` task to generate editor atlases
import com.badlogic.gdx.tools.texturepacker.TexturePacker
task pack {

	doLast {
	  TexturePacker.process(
	    'adventure-editor/assets-raw/editor/BladeSkin',           // Raw assets path.
	    'adventure-editor/src/main/resources/skin/BladeSkin',     // Output directory.
	    'BladeSkin-ldpi'              			 				  // Name of the generated atlas (without extension).
	  )
	  
	  TexturePacker.process(
	    'adventure-editor/assets-raw/editor/icons',
	    'adventure-editor/src/main/resources/images', 
	    'icons'  
	  )
	  
	  TexturePacker.process(
	    'adventure-editor/assets-raw/engine/ui-atlas', 
	    'adventure-editor/src/main/resources/projectTmpl/assets/ui/1', 
	    'ui'
	  )
  }
}

distZip {
  into(project.name + '-' + project.version) {
      from '.'
      include 'release-files/*'
  }
}
